{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProject\\\\my-new-react-app\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ArticleList from '/ArticleList';\nimport { Link } from 'react-router-dom';\n\n// Assumed modal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreferencesModal = ({\n  preferences,\n  onSave\n}) => {\n  _s();\n  const [selectedPreferences, setSelectedPreferences] = useState([]);\n  const handleSave = () => {\n    onSave(selectedPreferences);\n    // Logic to close modal (if your modal component isn't auto-closing)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose your preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: preferences.map(preference => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedPreferences.includes(preference.id),\n          onChange: () => {\n            setSelectedPreferences(currentPreferences => currentPreferences.includes(preference.id) ? currentPreferences.filter(id => id !== preference.id) : [...currentPreferences, preference.id]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), preference.name]\n      }, preference.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(PreferencesModal, \"D8mQL5Bz6Dg8mfxUYcVYDzyHUbc=\");\n_c = PreferencesModal;\nconst HomePage = () => {\n  _s2();\n  const [isFirstLogin, setIsFirstLogin] = useState(null); // Null indicates we don't know yet\n  const [preferences, setPreferences] = useState([]);\n\n  // Simulate fetching user's first login status and preferences list from backend\n  useEffect(() => {\n    // Assume fetchUserStatus returns { isFirstLogin: boolean, preferences: array }\n    const fetchUserStatus = async () => {\n      const response = await fakeApiCall();\n      setIsFirstLogin(response.isFirstLogin);\n      setPreferences(response.preferences);\n    };\n    fetchUserStatus();\n  }, []);\n  const savePreferences = userPreferences => {\n    // Logic to save user preferences\n    console.log('Saving user preferences:', userPreferences);\n    setIsFirstLogin(false); // Assume the user is no longer first-time login after saving\n  };\n\n  // If still loading user information\n  if (isFirstLogin === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-link\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        children: \"Profile Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isFirstLogin ? /*#__PURE__*/_jsxDEV(PreferencesModal, {\n      preferences: preferences,\n      onSave: savePreferences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ArticleList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(HomePage, \"7n6re+dMrXgkV0xjTSSIcR5UGVw=\");\n_c2 = HomePage;\nexport default HomePage;\n\n// Assumed API call function\nconst fakeApiCall = () => {\n  return Promise.resolve({\n    isFirstLogin: true,\n    // Assume user is first-time login\n    preferences: [{\n      id: 1,\n      name: 'Technology'\n    }, {\n      id: 2,\n      name: 'Science'\n    }\n    // More preferences\n    ]\n  });\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"PreferencesModal\");\n$RefreshReg$(_c2, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","ArticleList","Link","jsxDEV","_jsxDEV","PreferencesModal","preferences","onSave","_s","selectedPreferences","setSelectedPreferences","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","preference","type","checked","includes","id","onChange","currentPreferences","filter","name","onClick","_c","HomePage","_s2","isFirstLogin","setIsFirstLogin","setPreferences","fetchUserStatus","response","fakeApiCall","savePreferences","userPreferences","console","log","to","_c2","Promise","resolve","$RefreshReg$"],"sources":["D:/reactProject/my-new-react-app/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ArticleList from '/ArticleList'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Assumed modal component\r\nconst PreferencesModal = ({ preferences, onSave }) => {\r\n  const [selectedPreferences, setSelectedPreferences] = useState([])\r\n\r\n  const handleSave = () => {\r\n    onSave(selectedPreferences)\r\n    // Logic to close modal (if your modal component isn't auto-closing)\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <h2>Choose your preferences</h2>\r\n      <ul>\r\n        {preferences.map((preference) => (\r\n          <li key={preference.id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedPreferences.includes(preference.id)}\r\n              onChange={() => {\r\n                setSelectedPreferences((currentPreferences) =>\r\n                  currentPreferences.includes(preference.id)\r\n                    ? currentPreferences.filter((id) => id !== preference.id)\r\n                    : [...currentPreferences, preference.id]\r\n                )\r\n              }}\r\n            />\r\n            {preference.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleSave}>Save Preferences</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HomePage = () => {\r\n  const [isFirstLogin, setIsFirstLogin] = useState(null) // Null indicates we don't know yet\r\n  const [preferences, setPreferences] = useState([])\r\n\r\n  // Simulate fetching user's first login status and preferences list from backend\r\n  useEffect(() => {\r\n    // Assume fetchUserStatus returns { isFirstLogin: boolean, preferences: array }\r\n    const fetchUserStatus = async () => {\r\n      const response = await fakeApiCall()\r\n      setIsFirstLogin(response.isFirstLogin)\r\n      setPreferences(response.preferences)\r\n    }\r\n\r\n    fetchUserStatus()\r\n  }, [])\r\n\r\n  const savePreferences = (userPreferences) => {\r\n    // Logic to save user preferences\r\n    console.log('Saving user preferences:', userPreferences)\r\n    setIsFirstLogin(false) // Assume the user is no longer first-time login after saving\r\n  }\r\n\r\n  // If still loading user information\r\n  if (isFirstLogin === null) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <div className=\"profile-link\">\r\n        <Link to=\"/profile\">Profile Settings</Link>\r\n      </div>\r\n      {isFirstLogin ? (\r\n        <PreferencesModal preferences={preferences} onSave={savePreferences} />\r\n      ) : (\r\n        <ArticleList />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n\r\n// Assumed API call function\r\nconst fakeApiCall = () => {\r\n  return Promise.resolve({\r\n    isFirstLogin: true, // Assume user is first-time login\r\n    preferences: [\r\n      { id: 1, name: 'Technology' },\r\n      { id: 2, name: 'Science' },\r\n      // More preferences\r\n    ],\r\n  })\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
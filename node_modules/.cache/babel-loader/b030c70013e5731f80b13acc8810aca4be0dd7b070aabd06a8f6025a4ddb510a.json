{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactProject\\\\my-new-react-app\\\\src\\\\pages\\\\HomePage.js\";\nimport React from 'react';\n\n// Article data could also come from props or an API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst articleData = {\n  title: 'The Beauty of React',\n  author: 'Jane Doe',\n  content: `\n    React makes it painless to create interactive UIs. Design simple views for \n    each state in your application, and React will efficiently update and render \n    just the right components when your data changes. \n\n    Declarative views make your code more predictable and easier to debug. Component-based \n    architecture gives you the flexibility to pass rich data through your app and \n    keep state out of the DOM.\n  `\n};\nexport default function Article() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"article\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: articleData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"author\",\n      children: [\"By \", articleData.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: articleData.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = Article;\nvar _c;\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","articleData","title","author","content","Article","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/reactProject/my-new-react-app/src/pages/HomePage.js"],"sourcesContent":["import React from 'react'\r\n\r\n// Article data could also come from props or an API\r\nconst articleData = {\r\n  title: 'The Beauty of React',\r\n  author: 'Jane Doe',\r\n  content: `\r\n    React makes it painless to create interactive UIs. Design simple views for \r\n    each state in your application, and React will efficiently update and render \r\n    just the right components when your data changes. \r\n\r\n    Declarative views make your code more predictable and easier to debug. Component-based \r\n    architecture gives you the flexibility to pass rich data through your app and \r\n    keep state out of the DOM.\r\n  `,\r\n}\r\n\r\nexport default function Article () {\r\n  return (\r\n    <div className=\"article\">\r\n      <h1>{articleData.title}</h1>\r\n      <p className=\"author\">By {articleData.author}</p>\r\n      <div className=\"content\">{articleData.content}</div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,qBAAqB;EAC5BC,MAAM,EAAE,UAAU;EAClBC,OAAO,EAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASC,OAAOA,CAAA,EAAI;EACjC,oBACEL,OAAA;IAAKM,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBP,OAAA;MAAAO,QAAA,EAAKN,WAAW,CAACC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BX,OAAA;MAAGM,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,KAAG,EAACN,WAAW,CAACE,MAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDX,OAAA;MAAKM,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEN,WAAW,CAACG;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACC,EAAA,GARuBP,OAAO;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}